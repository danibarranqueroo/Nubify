[tool.poetry]
name = "nubify"
version = "0.1.0"
description = "Plataforma para simplificar la gestión de servicios cloud"
authors = ["José Daniel Barranquero Ortigosa <danielbo2001@correo.ugr.es>"]
readme = "README.md"
license = "MIT"
homepage = "https://github.com/danibarranqueroo/nubify"
repository = "https://github.com/danibarranqueroo/nubify"
keywords = ["aws", "cloud", "infrastructure", "deployment", "cli"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
]
packages = [{include = "src"}]
include = ["templates/*.yaml"]

[tool.poetry.dependencies]
python = "^3.9"
boto3 = "^1.34.0"
click = "^8.1.0"
rich = "^13.0.0"
pyyaml = "^6.0"
python-dotenv = "^1.0.0"
tabulate = "^0.9.0"
colorama = "^0.4.6"
google-generativeai = "^0.3.0"

[tool.poetry.group.dev.dependencies]
pytest = "^7.0.0"
pytest-cov = "^4.0.0"
black = "^23.0.0"
isort = "^5.12.0"
flake8 = "^7.0.0"
mypy = "^1.0.0"

[tool.poetry.scripts]
nubify = "src.main:cli"

[tool.poetry.urls]
"Bug Tracker" = "https://github.com/danibarranqueroo/nubify/issues"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 88
target-version = ['py38']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--cov=src",
    "--cov-report=term-missing",
    "--cov-report=html",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
] 